<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo加入自定义功能</title>
    <url>/2020/03/03/hexo%E5%8A%A0%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h2 id="Hexo-加入豆瓣读书页面"><a href="#Hexo-加入豆瓣读书页面" class="headerlink" title="Hexo 加入豆瓣读书页面"></a>Hexo 加入豆瓣读书页面</h2><p>在 Hexo 博客个性化定制中，加入豆瓣读书界面是一个很不错的功能。GitHub 上已经有人写好了这个模块：hexo-douban，我们只需要安装模块，然后配置一下就可以了。</p>
<p><strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure>

<p><strong>配置</strong><br>将下面的配置写入站点的配置文件_config.yml 里</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">douban:</span><br><span class="line">  user: mythsman</span><br><span class="line">  <span class="built_in">builtin</span>: <span class="literal">false</span></span><br><span class="line">  book:</span><br><span class="line">    title: <span class="string">'This is my book title'</span></span><br><span class="line">    quote: <span class="string">'This is my book quote'</span></span><br><span class="line">  movie:</span><br><span class="line">    title: <span class="string">'This is my movie title'</span></span><br><span class="line">    quote: <span class="string">'This is my movie quote'</span></span><br><span class="line">  game:</span><br><span class="line">    title: <span class="string">'This is my game title'</span></span><br><span class="line">    quote: <span class="string">'This is my game quote'</span></span><br><span class="line">  timeout: 10000</span><br></pre></td></tr></table></figure>

<p>user: 你的豆瓣 ID. 打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的 URL 大概是这样：”<a href="https://www.douban.com/people/xxxxxx/“，其中的”xxxxxx”" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/“，其中的”xxxxxx”</a> 就是你的个人 ID 了。<br>builtin: 是否将生成页面的功能嵌入 hexo s 和 hexo g 中，默认是 false, 另一可选项为 true (1.x.x 版本新增配置项)。<br>title: 该页面的标题。<br>quote: 写在页面开头的一段话，支持 html 语法。<br>timeout: 爬取数据的超时时间，默认是 10000ms , 如果在使用时发现报了超时的错 (ETIMEOUT) 可以把这个数据设置的大一点。<br>如果只想显示某一个页面 (比如 movie)，那就把其他的配置项注释掉即可。</p>
<p><strong>启动</strong><br>我们只需要在 Git Bash 中输入以下命令：hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s 即可，注意其中开启 hexo-douban 的命令中，-bgm 代表的是 book、game、movie 三个参数，如果只需要其中的一部分就只带你想要的那些参数。</p>
<p><strong>注意</strong>：由于 hexo douban 的简写也是 hexo d，与 hexo deploy 的简写指令 hexo d 冲突，因此在进行二者部署的时候，只能都打全名而不能打简写形式。</p>
<ul>
<li>在 0.x.x 版本中，文章的更新和豆瓣页面的爬取操作是绑定在一起的，无法支持单独更新文章或者单独爬取文章。 </li>
<li>在 1.x.x 版本中，使用<br>hexo douban 命令即可生成指定页面，如果不加参数，那么默认参数为 - bgm。如果配置了 builtin 参数为<br>true，那么除了可以使用 hexo douban 命令之外，hexo g 或 hexo s 也内嵌了生成页面的功能。因此，还是按照<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 就可以。</li>
</ul>
<p><strong>测试</strong><br>上面都没问题之后，我们只需要在站点目录下测试 <a href="http://localhost:4000/books" target="_blank" rel="noopener">http://localhost:4000/books</a> 或者 <a href="http://localhost:4000/movies" target="_blank" rel="noopener">http://localhost:4000/movies</a> 等，如果看到页面了就说明成功了。</p>
<p><strong>部署</strong><br>如果上述都没有问题，我们就可以在菜单栏中添加按钮了，打开主题配置文件_config.yml，找到菜单按钮，添加下面内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  movies: /movies/ || film</span><br><span class="line">  books: /books/ || book</span><br></pre></td></tr></table></figure>

<p>然后在 next/language/zh-CN.yml 文件中添加对应的中文参数信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  movies: 观影</span><br><span class="line">  books: 阅读</span><br></pre></td></tr></table></figure>

<p>至此，我们就完成了豆瓣读书页面的添加。</p>
<h2 id="实现-hexo-相册"><a href="#实现-hexo-相册" class="headerlink" title="实现 hexo 相册"></a>实现 hexo 相册</h2><p>准备工作<br>　　* 本节内容是基于实现本地保存图片功能前提记录的笔记，如果是用图床外链，可以跳过所有涉及到img文件夹以及img/s文件夹的步骤。<br>　　* 本相册的所有功能均仅测试了在hexo-theme-next下实现的效果，使用其它主题时部分布局尺寸数据可能会出现偏差，需要自行根据主题设置修改。</p>
<p>▶ 创建目录<br>在 git bash 中输入命令hexo new page gallery；<br>在hexo/sourse/gallery目录下建立你需要的分类相册文件夹；<br>进入hexo/sourse/gallery目录，新建img文件夹用来存放相册封面；<br>在每个相册文件夹中创建img文件夹用来存放大图，以及img/s文件夹用来存放缩略图。<br>Ps. img/s文件夹可以省略不建，用文件名-s.jpg的格式重命名缩略图即可。</p>
<p>▶ 图片处理<br>原图处理：<br>将需要上传的图片放入gallery/相册名/img文件夹中，为了加载速度建议压缩至 1mb 以下，使用 jpg 格式保存；<br>除了文件大小以外没有其它要求，但是为了方便后续页面编辑，建议将文件以容易辨识的方式重命名，例如日期-图片名.jpg。<br>缩略图处理：<br>将gallery/相册名/img下的所有图片复制到gallery/相册名/img/s文件夹中，使用 PS 等其它处理工具压缩图片大小；<br>建议宽度为 300px，最终输出文件大小在 30kb 左右，高度无要求。<br>封面图处理<br>从每个相册的缩略图中挑选需要的封面，复制到gallery/img文件夹中；<br>建议重命名为相册名.jpg。<br>相册主界面<br>打开gallery/index.md，将title设置成你需要的相册页面名称；<br>（可选）在日期下方加上comments: false关闭评论；<br>复制以下代码粘贴至正文，并按需求修改相册描述、相册名、相册文件夹名以及封面图文件名：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;！相册描述【此行可删除】&lt;/center&gt;</span><br><span class="line">&lt;center&gt;自定义分隔符【此行可删除】&lt;/center&gt;</span><br><span class="line">&lt;div class=<span class="string">"gallery-page"</span>&gt;</span><br><span class="line">	&lt;div class=<span class="string">"gallery-list"</span>&gt;</span><br><span class="line">		&lt;div class=<span class="string">"gallery-column"</span>&gt;</span><br><span class="line">			&lt;div class=<span class="string">"gallery-item"</span>&gt;</span><br><span class="line">				&lt;a href=<span class="string">"【！相册文件夹名】"</span>&gt;&lt;img src=<span class="string">"img/【！封面图文件名】.jpg"</span>&gt;</span><br><span class="line">				&lt;/a&gt;</span><br><span class="line">				&lt;p&gt;- ！相册1 -&lt;/p&gt;</span><br><span class="line">			&lt;/div&gt;</span><br><span class="line">			&lt;div class=<span class="string">"gallery-item"</span>&gt;</span><br><span class="line">				&lt;a href=<span class="string">"【！相册文件夹名】"</span>&gt;&lt;img src=<span class="string">"img/【！封面图文件名】.jpg"</span>&gt;</span><br><span class="line">				&lt;/a&gt;</span><br><span class="line">				&lt;p&gt;- ！相册2 -&lt;/p&gt;</span><br><span class="line">			&lt;/div&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=<span class="string">"gallery-column"</span>&gt;</span><br><span class="line">			&lt;div class=<span class="string">"gallery-item"</span>&gt;</span><br><span class="line">				&lt;a href=<span class="string">"sample"</span>&gt;&lt;img src=<span class="string">"img/sample.jpg"</span>&gt;</span><br><span class="line">				&lt;/a&gt;</span><br><span class="line">				&lt;p&gt;- 相册名 -&lt;/p&gt;</span><br><span class="line">			&lt;/div&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=<span class="string">"gallery-column"</span>&gt;</span><br><span class="line">			&lt;div class=<span class="string">"gallery-item"</span>&gt;</span><br><span class="line">				&lt;a href=<span class="string">"sample"</span>&gt;&lt;img src=<span class="string">"img/sample.jpg"</span>&gt;</span><br><span class="line">				&lt;/a&gt;</span><br><span class="line">				&lt;p&gt;- 相册名 -&lt;/p&gt;</span><br><span class="line">			&lt;/div&gt;</span><br><span class="line">			&lt;/div&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;center&gt;自定义分割线【此行可删除】&lt;/center&gt;</span><br></pre></td></tr></table></figure>

<p>Ps. 1. 需要使用外链的场合，将<img src="img/【封面图文件名】.jpg">中的内容替换为图床外链地址即可；<br>Ps. 2. 代码中<div class="gallery-column">元素为分列显示相册的列数，可按需要增减；<br>Ps. 3. 新增相册时请确认代码添加在<div class="gallery-column">元素内部，否则会造成显示错误。</p>
<p>分类相册界面<br>打开gallery/相册名/index.md，将title设置成你需要的相册页面名称；<br>（可选）在日期下方加上comments: false关闭评论；<br>复制以下代码粘贴至正文，并按需求修改相册描述、图片名以及缩略图文件名：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;！相册描述【此行可删除】&lt;/center&gt;</span><br><span class="line">&lt;center&gt;自定义分隔符【此行可删除】&lt;/center&gt;</span><br><span class="line">&lt;div class=<span class="string">"gallery-page"</span>&gt;</span><br><span class="line">	&lt;div class=<span class="string">"img-list"</span>&gt;</span><br><span class="line">		&lt;div class=<span class="string">"img-column"</span>&gt;</span><br><span class="line">			&lt;a href=<span class="string">"img/【！图片名1】.jpg"</span> target=<span class="string">"_Blank"</span>&gt;&lt;img src=<span class="string">"img/s/【！缩略图文件名1】.jpg"</span>&gt;&lt;/a&gt;</span><br><span class="line">			&lt;a href=<span class="string">"img/【！图片名2】.jpg"</span> target=<span class="string">"_Blank"</span>&gt;&lt;img src=<span class="string">"img/s/【！缩略图文件名2】.jpg"</span>&gt;&lt;/a&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=<span class="string">"img-column"</span>&gt;</span><br><span class="line">			&lt;a href=<span class="string">"img/sample.jpg"</span> target=<span class="string">"_Blank"</span>&gt;&lt;img src=<span class="string">"img/s/sample.jpg"</span>&gt;&lt;/a&gt;</span><br><span class="line">		&lt;/div&gt;</span><br><span class="line">		&lt;div class=<span class="string">"img-column"</span>&gt;</span><br><span class="line">			&lt;a href=<span class="string">"img/sample.jpg"</span> target=<span class="string">"_Blank"</span>&gt;&lt;img src=<span class="string">"img/s/sample.jpg"</span>&gt;&lt;/a&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;center&gt;自定义分割线【此行可删除】&lt;/center&gt;</span><br></pre></td></tr></table></figure>

<p>Ps. 1. 需要使用外链的场合，将<img src="img/【图片名】.jpg">中的内容替换为图床外链地址即可，如果图床加载速度够快可以用同一个链接填充缩略图部分；<br>Ps. 2. 代码中<div class="img-column">元素为分列显示图片的列数，可按需要增减；<br>Ps. 3. 添加图片时请确认代码添加在<div class="img-column">元素内部，否则会造成显示错误。</p>
<p>CSS 样式<br>在custom.styl中加入如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/*gallery*/</span><br><span class="line"></span><br><span class="line">.gallery-page &#123;</span><br><span class="line">	margin-top: -50px;</span><br><span class="line">&#125;</span><br><span class="line">.img-list,</span><br><span class="line">.gallery-list &#123;</span><br><span class="line">	display: flex;</span><br><span class="line">	flex-direction: row;</span><br><span class="line">	flex-wrap: nowrap;</span><br><span class="line">	align-items: flex-start;</span><br><span class="line">&#125;</span><br><span class="line">.img-column &#123;</span><br><span class="line">	display: flex;</span><br><span class="line">	flex-direction: column-reverse;</span><br><span class="line">&#125;</span><br><span class="line">.img-column a,</span><br><span class="line">.gallery-column a &#123;</span><br><span class="line">	border-bottom: 0px;</span><br><span class="line">&#125;</span><br><span class="line">.gallery-item &#123;</span><br><span class="line">	margin-bottom: -50px</span><br><span class="line">&#125;</span><br><span class="line">.gallery-item p &#123;</span><br><span class="line">	margin: -25px auto -10px;</span><br><span class="line">	max-width: 50%;</span><br><span class="line">	text-align: center;</span><br><span class="line">	font-size: 15px;</span><br><span class="line">	color: <span class="variable">$black</span>-deep;</span><br><span class="line">	background: rgba(255,255,255,.3);</span><br><span class="line">	border-radius: 7px;</span><br><span class="line">	border: 1px solid <span class="variable">$black</span>-deep;</span><br><span class="line">	box-shadow: 0 8px 20px -8px rgba(0,0,0,.3);</span><br><span class="line">&#125;</span><br><span class="line">.posts-expand .post-body .gallery-column a img &#123;</span><br><span class="line">	height: 250px;</span><br><span class="line">	width: 300px;</span><br><span class="line">	object-fit: cover;</span><br><span class="line">&#125;</span><br><span class="line">@media (max-width: 767px)&#123;</span><br><span class="line">	.gallery-item p &#123;</span><br><span class="line">		min-width: 75px;</span><br><span class="line">		font-size: 13px;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Ps. 1. @media标签内的样式是防止移动端浏览时相册名被强制换行的，建议保留；<br>Ps. 2. 其余样式除了 flex 相关行与object-fit样式以外，均可根据需要自行更改，在此不作赘述。</p>
<p>无_custom/custom.styl 文件时，在根目录source下创建 _data文件夹创建styles.styl文件加入css代码，主题_config.yml 文件修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  style: <span class="built_in">source</span>/_data/styles.styl</span><br></pre></td></tr></table></figure>

<h2 id="加入音乐播放器"><a href="#加入音乐播放器" class="headerlink" title="加入音乐播放器"></a>加入音乐播放器</h2><p><strong>下载</strong><br>首先，先下载Aplayer源码：APlayer<br><strong>dist文件夹</strong><br>再将文件中的dist文件夹复制到路径：blog/themes/next/source（我的next版本是7.5）<br><strong>新建music.js</strong><br>在目录blog/themes/next/source/dist下添加music.js文件<br>内容是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">const ap = new APlayer(&#123;</span><br><span class="line">    container: document.getElementById(<span class="string">'aplayer'</span>),</span><br><span class="line">    fixed: <span class="literal">true</span>,</span><br><span class="line">    autoplay: <span class="literal">true</span>,</span><br><span class="line">    audio: [</span><br><span class="line">	  &#123;</span><br><span class="line">        name: <span class="string">'勇气'</span>,</span><br><span class="line">        artist: <span class="string">'棉子'</span>,</span><br><span class="line">        url: <span class="string">'http://music.163.com/song/media/outer/url?id=1411358329.mp3'</span>,</span><br><span class="line">        cover: <span class="string">'https://raw.githubusercontent.com/sfershmiss11/Photo/master/wife.png'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        name: <span class="string">'这就是爱吗'</span>,</span><br><span class="line">        artist: <span class="string">'十豆'</span>,</span><br><span class="line">        url: <span class="string">'http://music.163.com/song/media/outer/url?id=1412242872.mp3'</span>,</span><br><span class="line">        cover: <span class="string">'https://raw.githubusercontent.com/sfershmiss11/Photo/master/wife.png'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">	  &#123;</span><br><span class="line">        name: <span class="string">'彼女は旅に出る'</span>,</span><br><span class="line">        artist: <span class="string">'鎖那'</span>,</span><br><span class="line">        url: <span class="string">'http://music.163.com/song/media/outer/url?id=509106775.mp3'</span>,</span><br><span class="line">        cover: <span class="string">'/images/1.jpg'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">	  &#123;</span><br><span class="line">        name: <span class="string">'失眠飞行'</span>,</span><br><span class="line">        artist: <span class="string">'接个吻，开一枪 / 沈以诚 / 薛明媛'</span>,</span><br><span class="line">        url: <span class="string">'http://music.163.com/song/media/outer/url?id=1365898499.mp3'</span>,</span><br><span class="line">        cover: <span class="string">'/images/2.jpg'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">	  &#123;</span><br><span class="line">        name: <span class="string">'冬眠'</span>,</span><br><span class="line">        artist: <span class="string">'司南'</span>,</span><br><span class="line">        url: <span class="string">'http://music.163.com/song/media/outer/url?id=1398663411.mp3'</span>,</span><br><span class="line">        cover: <span class="string">'/images/3.jpg'</span>,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>注：里面的代码可以修改，歌曲信息需要手动添加：</p>
<p>name：歌曲名称<br>artist：作者<br>url：连接（具体怎样操作看下面步骤）<br>cover：是图片连接，可以是本地图片，也可以是在线图片，本地放在source/images然后修改路径即可</p>
<p><strong>url添加歌曲方法</strong><br>网易云网页播放一首歌曲<br>将网址中的id复制例：<a href="https://music.163.com/#/song?id=1411358329" target="_blank" rel="noopener">https://music.163.com/#/song?id=1411358329</a><br>将下面代码中的id修改为你想添加歌曲的id：<a href="http://music.163.com/song/media/outer/url?id=.mp3" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?id=.mp3</a><br><strong>修改文件_layout.swig</strong><br>在路径：blog/themes/next/layout下找到_layout.swig文件，然后将下面的代码添加到：&lt;body itemscope …&gt;在body里面就可以</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"/dist/APlayer.min.css"</span>&gt;</span><br><span class="line">&lt;div id=<span class="string">"aplayer"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/dist/APlayer.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/dist/music.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>


<p>参考文章：<br><a href="https://co5.me/2018/181112-gallerry2.html" target="_blank" rel="noopener">css+markdown 实现 hexo 相册【进阶篇】</a><br><a href="https://bestzuo.cn/posts/hexo-douban.html" target="_blank" rel="noopener">在Hexo博客中加入豆瓣读书页面</a><br><a href="https://blog.csdn.net/qq_35324057/article/details/104124723" target="_blank" rel="noopener">Hexo next主题中添加播放器Aplayer</a></p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+next主题美化</title>
    <url>/2020/03/03/hexo-next%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/</url>
    <content><![CDATA[<h2 id="一、站点配置"><a href="#一、站点配置" class="headerlink" title="一、站点配置"></a>一、站点配置</h2><p>1、设置 hexo 的 next 主题<br>我们在站点的配置文件_config.yml 中找到 theme 后添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">theme: next  <span class="comment"># 配置成刚下载的next主题</span></span><br></pre></td></tr></table></figure>

<p>2、配置 hexo 网站相关信息<br>我们在站点的配置文件_config.yml 中，修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title:          <span class="comment"># 网站标题</span></span><br><span class="line">subtitle:       <span class="comment"># 网站副标题</span></span><br><span class="line">description:    <span class="comment"># 描述，介绍网站的</span></span><br><span class="line">keywords:       <span class="comment"># 网站的关键字</span></span><br><span class="line">author:         <span class="comment"># 博主姓名</span></span><br><span class="line">language: zh-CN <span class="comment"># 语言：zh-CN 是简体中文</span></span><br><span class="line">timezone: UTC   <span class="comment"># 时区</span></span><br></pre></td></tr></table></figure>

<p>注意：博客框架默认的语言是英文，我们需要到 /themes/next/languages 目录下，查看当前 NexT 版本简体中文对照文件的名称是 zh-Hans 还是 zh-CN。这里是 zh-CN。</p>
<p>3、设置 hexo 永久链接<br>我们在站点的配置文件_config.yml 中，修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">url: https://tding.top/</span><br><span class="line">root: /</span><br><span class="line">permalink: archives/:abbrlink.html</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line">  rep: hex    <span class="comment"># 进制：dec(default) and hex</span></span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure>

<p>注：这个文章永久链接设置需要安装插件，详细安装配置过程见：本博客当前使用的插件总结中的 Hexo 文章永久链接插件。</p>
<p>4、nofollow 标签的使用<br>减少出站链接能够有效防止权重分散，hexo 有很方便的自动为出站链接添加 nofollow 标签的插件。</p>
<p>首先安装 hexo-filter-nofollow 插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-filter-nofollow --save</span><br></pre></td></tr></table></figure>

<p>然后我们在站点的配置文件_config.yml 中添加配置，将 nofollow 设置为 true：</p>
<h1 id="外部链接优化"><a href="#外部链接优化" class="headerlink" title="外部链接优化"></a>外部链接优化</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nofollow:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  field: site</span><br><span class="line">  exclude:</span><br><span class="line">    - <span class="string">'exclude1.com'</span></span><br><span class="line">    - <span class="string">'exclude2.com'</span></span><br></pre></td></tr></table></figure>

<p>其中 exclude（例外的链接，比如友链）将不会被加上 nofollow 属性。</p>
<h2 id="二、主题配置"><a href="#二、主题配置" class="headerlink" title="二、主题配置"></a>二、主题配置</h2><p>1、配置 hexo 中的 about、tag、categories、sitemap 菜单<br>默认的主题配置文件_config.yml 中，菜单只开启了首页和归档，我们根据需要，可以添加 about、tag、categories、sitemap 等菜单，所以把它们也取消注释。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 菜单设置为 菜单名: /菜单目录 || 菜单图标名字</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  sitemap: /sitemap.xml || sitemap</span><br><span class="line">  commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: <span class="literal">true</span>   <span class="comment"># 显示图标</span></span><br><span class="line">  badges: <span class="literal">true</span>  <span class="comment"># 显示统计信息</span></span><br></pre></td></tr></table></figure>

<p>注：hexo 所有图标均来自 fontawesome，其中 || 后面是你想要设置的图标的名字。</p>
<p>2、手动生成 hexo 菜单对应文件<br>新菜单开启后是没有对应文件的，所以要手动生成 about、tags、categories、404 页面。</p>
<p>新建 about 页面<br>about 页面一般用来介绍站点信息和博主信息。</p>
<p>我们可以在博客根目录下输入以下命令新建页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>

<p>然后你会发现多了一个 hexo/source/about 文件夹，里面有一个 index.md 文件，你可以根据自己的需要在这个 Markdown 文件中写一些内容（同文章一样，用 Markdown 语法）。</p>
<p>新建一个 tags 页面<br>同样的，我们可以新建 tags 页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>在 tags 页面文件 hexo/source/tags/index.md 的头部修改为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 2019-06-29 11:35:42   <span class="comment"># 时间随意</span></span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span>                <span class="comment"># 类型一定要为tags</span></span><br><span class="line">comments: <span class="literal">false</span>             <span class="comment"># 提示这个页面不需要加载评论</span></span><br></pre></td></tr></table></figure>

<p>新建一个 categories 页面<br>同样的，我们可以新建 categories 页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>

<p>在 categories 页面文件 hexo/source/categories/index.md 的头部修改为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: 文章分类</span><br><span class="line">date: 2018-10-15 00:03:57</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>新建一个 404 页面<br>这里我们将 404 替换成腾讯的公益页面。</p>
<p>首先我们在 hexo/source 目录下创建自己的 404.html：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">        &lt;title&gt;404&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> charset=<span class="string">"utf-8"</span> homePageUrl=<span class="string">"/"</span> homePageName=<span class="string">"返回"</span>&gt;&lt;/script&gt; </span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>注意：Hexo 博客的基本内容是一些 Markdown 文件，放在 source/_post 文件夹下，每个文件对应一篇文章。除此之外，放在 source 文件夹下的所有开头不是下划线的文件，在 hexo generate 的时候，都会被拷贝到 public 文件夹下。但是，Hexo 默认会渲染所有的 HTML 和 Markdown 文件。</p>
<p>因此我们可以简单地在文件开头加上 layout: false 一行来避免渲染：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">+layout: <span class="literal">false</span></span><br><span class="line">+---</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">        &lt;title&gt;404&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js"</span> charset=<span class="string">"utf-8"</span> homePageUrl=<span class="string">"/"</span> homePageName=<span class="string">"返回"</span>&gt;&lt;/script&gt; </span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>这样我们就完成了 404 页面的创建。</p>
<p>注意：本地测试不出来，发布出来就可以了。</p>
<p>3、配置 hexo 本地搜索<br>本地搜索的原理<br>对于动态网站来说，可以通过 php 实现。但是，Hexo 博客是静态网站，用不了 php。</p>
<p>NexT 主题已经实现这个功能，它用了 Hexo 的拓展包 hexo-generator-searchdb，预先生成了一个文本库 search.xml，然后传到了网站里面。在本地搜索的时候，NexT 直接用 javascript 调用了这个文件，从而实现了静态网站的本地搜索。</p>
<p>设置过程<br>安装插件:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>然后我们修改站点配置_config.yml 文件，添加如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 本地搜索</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 100</span><br><span class="line">path：索引文件的路径，相对于站点根目录</span><br><span class="line">field：搜索范围，默认是 post，还可以选择 page、all，设置成 all 表示搜索所有页面</span><br><span class="line"><span class="built_in">limit</span>：限制搜索的条目数</span><br></pre></td></tr></table></figure>

<p>然后修改主题配置文件_config.yml：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  unescape: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  preload: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>4、设置 hexo 中的 rss 订阅<br>安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p>在站点配置文件_config.yml 中添加以下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">feed:</span><br><span class="line">  <span class="built_in">type</span>: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  <span class="built_in">limit</span>: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br><span class="line">  content_limit: 140</span><br><span class="line">  content_limit_delim: <span class="string">' '</span></span><br><span class="line">  order_by: -date</span><br><span class="line">  icon: icon.png</span><br><span class="line">  autodiscovery: <span class="literal">true</span></span><br><span class="line">  template:</span><br></pre></td></tr></table></figure>

<p>5、配置 hexo 站点的 footer 信息<br>底部 footer 可以开关显示 hexo 信息、theme 信息、建站时间等个性化配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  since: 2018        <span class="comment"># 建站开始时间</span></span><br><span class="line">  icon:</span><br><span class="line">    name: user       <span class="comment"># 设置 建站初始时间和至今时间中间的图标，默认是一个'小人像'，更改user为heart可以变成一个心</span></span><br><span class="line">    animated: <span class="literal">true</span></span><br><span class="line">    color: <span class="string">"#808080"</span> <span class="comment"># 更改图标的颜色，红色为'#ff0000'</span></span><br><span class="line">  powered:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span>     <span class="comment"># 开启hexo驱动</span></span><br><span class="line">    version: <span class="literal">true</span>    <span class="comment"># 开启hexo版本号</span></span><br><span class="line">  theme:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span>     <span class="comment"># 开启主题驱动</span></span><br><span class="line">    version: <span class="literal">true</span>    <span class="comment"># 开启主题版本号</span></span><br><span class="line">  custom_text: Hosted by &lt;a target=<span class="string">"_blank"</span> rel=<span class="string">"external nofollow"</span> href=<span class="string">"https://pages.coding.me"</span>&gt;&lt;b&gt;Coding Pages&lt;/b&gt;&lt;/a&gt; <span class="comment"># 这里的底部标识是为了添加coding page服务时的版权声明 打开注释就可以看到底部有一个 hosted by coding pages</span></span><br></pre></td></tr></table></figure>

<p>6、配置 hexo 中 next 主题样式选择<br>NexT 一共提供了 4 种首页样式，按照自己喜好选择一个，选择一个其他主题样式后其他的主题前一定要加上注释#：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<p>7、头像信息设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  url: /images/avatar.jpg  <span class="comment"># 设置头像资源的位置</span></span><br><span class="line">  rounded: <span class="literal">true</span>            <span class="comment"># 开启圆形头像</span></span><br><span class="line">  opacity: 1               <span class="comment"># 不透明的比例：0就是完全透明</span></span><br><span class="line">  rotated: <span class="literal">false</span>           <span class="comment"># 不开启旋转</span></span><br></pre></td></tr></table></figure>

<p>8、社交信息和友链配置<br>这里和菜单设置格式一样，社交名字: 社交url || 社交图标，图标信息来自 fontawesome：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">social: </span><br><span class="line">  GitHub: https://github.com/yourname || github</span><br><span class="line">  E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  Google: https://plus.google.com/yourname || google</span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>      <span class="comment"># 显示社交图标</span></span><br><span class="line">  icons_only: <span class="literal">false</span> <span class="comment"># 只显示图标，不显示文字</span></span><br></pre></td></tr></table></figure>

<p>友链配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line">links_icon: link          <span class="comment"># 友链的图标 参考上文</span></span><br><span class="line">links_title: Links        <span class="comment"># 友链的title  比如你可以更改为 友情链接</span></span><br><span class="line">links_layout: block       <span class="comment"># 友链摆放的样式：按块（一行一个）</span></span><br><span class="line"><span class="comment">#links_layout: inline     # 友链摆放的样式：按线摆放（一行很多个），注意，同时只能一种样式</span></span><br><span class="line">links:</span><br><span class="line">  Title: http://example.com/  <span class="comment"># 友链的地址</span></span><br></pre></td></tr></table></figure>

<p>9、首页文章不展示全文显示摘要<br>通过在文章中加入 <a id="more"></a> 来控制 Read More 摘要内容。</p>
<p>10、首页文章属性</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  item_text: <span class="literal">false</span>    <span class="comment"># 设为true 可以一行显示，文章的所有属性</span></span><br><span class="line">  created_at: <span class="literal">true</span>    <span class="comment"># 显示创建时间</span></span><br><span class="line">  updated_at:</span><br><span class="line">    enabled: <span class="literal">true</span>     <span class="comment"># 显示修改的时间</span></span><br><span class="line">    another_day: <span class="literal">true</span> <span class="comment"># 设true时，如果创建时间和修改时间一样则显示一个时间</span></span><br><span class="line">  categories: <span class="literal">true</span>    <span class="comment"># 显示分类信息</span></span><br></pre></td></tr></table></figure>

<p>11、页面阅读统计</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">false</span>              <span class="comment"># 设true 开启</span></span><br><span class="line">  total_visitors: <span class="literal">true</span>       <span class="comment"># 总阅读人数（uv数）</span></span><br><span class="line">  total_visitors_icon: user  <span class="comment"># 阅读总人数的图标</span></span><br><span class="line">  total_views: <span class="literal">true</span>          <span class="comment"># 总阅读次数（pv数）</span></span><br><span class="line">  total_views_icon: eye      <span class="comment"># 阅读总次数的图标</span></span><br><span class="line">  post_views: <span class="literal">true</span>           <span class="comment"># 开启内容阅读次数</span></span><br><span class="line">  post_views_icon: eye       <span class="comment"># 内容页阅读数的图标</span></span><br></pre></td></tr></table></figure>

<p>12、字数统计、阅读时长<br>首先安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure>

<p>主题配置文件_config.yml 修改如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: <span class="literal">true</span>  <span class="comment"># false会显示一行</span></span><br><span class="line">  item_text_post: <span class="literal">true</span>  <span class="comment"># 显示属性名称,设为false后只显示图标和统计数字,不显示属性的文字</span></span><br><span class="line">  item_text_total: <span class="literal">true</span> <span class="comment"># 底部footer是否显示字数统计属性文字</span></span><br><span class="line">  awl: 4                <span class="comment"># 计算字数的一个设置,没设置过</span></span><br><span class="line">  wpm: 275              <span class="comment"># 一分钟阅读的字数</span></span><br></pre></td></tr></table></figure>
<p>站点配置文件_config.yml 新增如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line"> <span class="comment">#文章内是否显示</span></span><br><span class="line">  symbols: <span class="literal">true</span></span><br><span class="line">  time: <span class="literal">true</span></span><br><span class="line"> <span class="comment"># 网页底部是否显示</span></span><br><span class="line">  total_symbols: <span class="literal">true</span></span><br><span class="line">  total_time: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>13、内容页里的代码块新增复制按钮</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  copy_button:</span><br><span class="line">    <span class="built_in">enable</span>: <span class="literal">false</span>      <span class="comment"># 增加复制按钮的开关</span></span><br><span class="line">    show_result: <span class="literal">false</span> <span class="comment"># 点击复制完后是否显示 复制成功 结果提示</span></span><br></pre></td></tr></table></figure>

<p>14、配置微信，支付宝打赏</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reward</span></span><br><span class="line">reward_comment:                   <span class="comment"># 打赏描述</span></span><br><span class="line">wechatpay: /images/wechatpay.png  <span class="comment"># 微信支付的二维码图片地址</span></span><br><span class="line">alipay: /images/alipay.png        <span class="comment"># 支付宝的地址</span></span><br><span class="line"><span class="comment">#bitcoin: /images/bitcoin.png     # 比特币地址</span></span><br></pre></td></tr></table></figure>

<p>15、相关文章推荐<br>安装推荐文章的插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>

<p>主题配置信息如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">related_posts:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  title: 相关文章推荐      <span class="comment"># 属性的命名</span></span><br><span class="line">  display_in_home: <span class="literal">false</span> <span class="comment"># false代表首页不显示</span></span><br><span class="line">  params:</span><br><span class="line">    maxCount: 5          <span class="comment"># 最多5条</span></span><br><span class="line">    <span class="comment">#PPMixingRate: 0.0   # 相关度</span></span><br><span class="line">    <span class="comment">#isDate: true        # 是否显示日期</span></span><br><span class="line">    <span class="comment">#isImage: false      # 是否显示配图</span></span><br><span class="line">    isExcerpt: <span class="literal">false</span>     <span class="comment"># 是否显示摘要</span></span><br></pre></td></tr></table></figure>

<p>16、文章原创申明</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: <span class="literal">false</span></span><br><span class="line">  post: <span class="literal">true</span>       <span class="comment"># 默认显示版权信息</span></span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>

<p>17、背景动画设置<br>Canvas-nest 风格<br>进入 theme/next 目录，执行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-nest <span class="built_in">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure>

<p>实际上就是将一个显示动效的 js 文件 clone 到对应目录。</p>
<p>这时将配置文件_config.yml 中的 canvas_nest: false 改为 canvas_nest: true 才能真正生效。</p>
<p>18、添加 Google 统计<br>访问 Google Analytics，按照提示填写网站信息开通 GA 服务，获取统计 ID。</p>
<p>然后编辑主题配置文件_config.yml，找到关键字 google_analytics，删除注释#并填写获取到的统计 ID：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Analytics</span></span><br><span class="line">google_analytics:</span><br><span class="line">  tracking_id: </span><br><span class="line">  localhost_ignored: <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>19、Google Search Console<br>该版本已经集成了 HTML 标记的验证方式。</p>
<p>查看原标记，将其中 content 字段引号内的内容拷贝出来<br>修改主题配置文件_config.yml。搜索 google_site_verification，将上述拷贝的内容复制在该值后面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="comment"># See: https://www.google.com/webmasters/</span></span><br><span class="line">google_site_verification: uW8bwgMGUwIA01nPfItoty1rmtmmuVkOVTeS9O0nAUg</span><br></pre></td></tr></table></figure>
<p>20.添加背景图片<br>设置背景图片<br>将想要的背景图片放入 themes/next/source/images。打开 themes/next/source/css/ _custom/custom.styl 文件，这个是 Next 故意留给用户自己个性化定制一些样式的文件，添加以下代码即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">    background:url(/images/yourbackground.jpg);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment:fixed; //不重复</span><br><span class="line">    background-size: cover;      //填充</span><br><span class="line">    background-position:50% 50%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>background:url 为图片路径，也可以直接使用链接。<br>background-repeat：若果背景图片不能全屏，那么是否平铺显示，充满屏幕<br>background-attachment：背景是否随着网页上下滚动而滚动，fixed 为固定<br>background-size：图片展示大小，这里设置 100%，100% 的意义为：如果背景图片不能全屏，那么是否通过拉伸的方式将背景强制拉伸至全屏显示。<br>博客内容透明化<br>NexT 主题的博客文章均是不透明的，这样读者就不能好好欣赏背景图片了，下面的方法可以使博客内容透明化：</p>
<p>在 themes/next/source/css/_custom/custom.styl 中添加以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//博客内容透明化</span><br><span class="line">//文章内容的透明度设置</span><br><span class="line">.content-wrap &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//侧边框的透明度设置</span><br><span class="line">.sidebar &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏的透明度设置</span><br><span class="line">.header-inner &#123;</span><br><span class="line">  background: rgba(255,255,255,0.9);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//搜索框（<span class="built_in">local</span>-search）的透明度设置</span><br><span class="line">.popup &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意：其中 header-inner 不能使用 opacity 进行配置。因为 header-inner 包含 header.swig 中的所有内容。若使用 opacity 进行配置，子结点会出很多问题。</p>
<p>无_custom/custom.styl 文件时，在根目录source下创建 _data文件夹创建styles.styl文件加入css代码，主题_config.yml 文件修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  style: <span class="built_in">source</span>/_data/styles.styl</span><br></pre></td></tr></table></figure>

<h2 id="三、参考文章"><a href="#三、参考文章" class="headerlink" title="三、参考文章"></a>三、参考文章</h2><p><a href="https://tding.top/archives/42c38b10.html" target="_blank" rel="noopener">Hexo-NexT (v7.0+) 主题配置</a><br><a href="https://tding.top/archives/761b6f4d.html" target="_blank" rel="noopener">Hexo-NexT 设置博客背景图片</a></p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next博客搭建</title>
    <url>/2020/03/02/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>Hexo是一个快速，简单且功能强大的博客框架。您使用Markdown（或其他标记语言）编写帖子，然后Hexo会在几秒钟内生成带有精美主题的静态文件。</p>
<a id="more"></a>
<p>要求：</p>
<ul>
<li>node.js</li>
<li>git</li>
</ul>
<p>1.登录github创建一个仓库，仓库名为：用户名.github.io<br><img src="https://img-blog.csdnimg.cn/20200302101003818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTkwNzc4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.下载并安装Node.js。        网址: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a><br>3.打开git bash    ，输入命令：<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br>安装后输入cnpm -v可查看版本。<br>之后npm需改成cnpm。<br>4.输入命令安装hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>5.创建一个文件夹blog：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir blog</span><br></pre></td></tr></table></figure>

<p>6.进入文件夹，初始化：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>7.打开根目录下的_config.yml文件，更改主题theme: landscape 改为 theme: next  ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>同时修改文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/sfershmiss11/sfershmiss11.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>repository为仓库地址。<br>8.    安装工具后才可hexo d 到仓库 ，安装命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>9.下载next主题在themes文件夹下的next里，命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>10.创建新文章：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n 名字</span><br></pre></td></tr></table></figure>

<p>11.然后打开hexo\source_posts下的.md文件加入文章内容。<br>文章内容要用Markdown编写。</p>
<p>12.配置网站信息，打开根目录下_config.yml文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title:          <span class="comment"># 网站标题</span></span><br><span class="line">subtitle:       <span class="comment"># 网站副标题</span></span><br><span class="line">description:    <span class="comment"># 描述，介绍网站的</span></span><br><span class="line">keywords:       <span class="comment"># 网站的关键字</span></span><br><span class="line">author:         <span class="comment"># 博主姓名</span></span><br><span class="line">language: zh-CN <span class="comment"># 语言：zh-CN 是简体中文</span></span><br><span class="line">timezone: UTC   <span class="comment"># 时区</span></span><br></pre></td></tr></table></figure>
<p>13.配置blog主页菜单，打开主题_config.yml文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 菜单设置为 菜单名: /菜单目录 || 菜单图标名字</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  sitemap: /sitemap.xml || sitemap</span><br><span class="line">  commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: <span class="literal">true</span>   <span class="comment"># 显示图标</span></span><br><span class="line">  badges: <span class="literal">true</span>  <span class="comment"># 显示统计信息</span></span><br></pre></td></tr></table></figure>
<p>14.手动生成对应页面:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n page Name</span><br></pre></td></tr></table></figure>

<p>创建新页面名：about    ，tags    ，categories<br>15.<strong>next.yml</strong><br>我们可以将所有主题配置放在一个位置（hexo/source/_data/next.yml）。这样就无需编辑主题配置文件（next/_config.yml）。<br>具体步骤：<br>在 hexo/source/_data 目录中创建 next.yml（如果_data 不存在，则创建目录）。<br>在 next.yml 设置 override 选项为 true。<br>将所有 NexT 主题选项从主题配置文件复制到 hexo/source/_data/next.yml 中。</p>
<p>16.NexT 一共提供了 4 种首页样式，按照自己喜好选择一个，选择一个其他主题样式后其他的主题前一定要加上注释#：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>
<p>17.输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200302111946294.png" alt="在这里插入图片描述"><br>然后在浏览器输入网址：localhost:4000 预览博客页面，git bash中输入ctrl+c退出预览.</p>
<p>18.设置完毕后输入命令上传到github仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习-小游戏制作</title>
    <url>/2020/03/01/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0-%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<p>前几天在知乎上看到一篇文章，了解到了一个通过制作小游戏来学习C语言的书《c语言课程设计与游戏开发实践教程》，很感兴趣就买来学习一下。本帖为学习记录过程。</p>
<a id="more"></a>
<h2 id="自动弹跳的小球"><a href="#自动弹跳的小球" class="headerlink" title="自动弹跳的小球"></a>自动弹跳的小球</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;		//system </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;	//Sleep </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">5</span>;</span><br><span class="line">	<span class="keyword">int</span> y=<span class="number">10</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> right=<span class="number">20</span>;</span><br><span class="line">	<span class="keyword">int</span> velocity_x=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> velocity_y=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> bottom=<span class="number">10</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		x=x+velocity_x;</span><br><span class="line">		y=y+velocity_y;</span><br><span class="line">		</span><br><span class="line">		system(<span class="string">"cls"</span>);	<span class="comment">//清屏 </span></span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;x;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;y;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"o"</span>);	<span class="comment">//小球 </span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">		Sleep(<span class="number">80</span>);		<span class="comment">//执行间隔时间，参数为毫秒 </span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(x==top||x==bottom)	<span class="comment">//撞到上下的边界 </span></span><br><span class="line">			velocity_x=-velocity_x;</span><br><span class="line">		<span class="keyword">if</span>(y==left||y==right)	<span class="comment">//撞到左右的边界 </span></span><br><span class="line">			velocity_y=-velocity_y;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>sleep语句也可以用循环语句来实现同样的效果。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">20000</span>;n++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">2000</span>;m++)</span><br><span class="line">			&#123;</span><br><span class="line">				k++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;		<span class="comment">//增加执行间隔时间</span></span><br></pre></td></tr></table></figure>
<h2 id="飞机游戏"><a href="#飞机游戏" class="headerlink" title="飞机游戏"></a>飞机游戏</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;	//gotoxy </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> position_x,position_y;		<span class="comment">//飞机位置 </span></span><br><span class="line"><span class="keyword">int</span> hight,<span class="built_in">width</span>;		<span class="comment">//游戏画面大小 </span></span><br><span class="line"><span class="keyword">int</span> bullet_x,bullet_y;		<span class="comment">//子弹位置 </span></span><br><span class="line"><span class="keyword">int</span> enemy_x,enemy_y;		<span class="comment">//敌机的位置 </span></span><br><span class="line"><span class="keyword">int</span> score;		<span class="comment">//得分 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span>		<span class="comment">//清屏函数 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">	COORD pos;</span><br><span class="line">	pos.X=x;</span><br><span class="line">	pos.Y=y;</span><br><span class="line">	SetConsoleCursorPosition(handle,pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HideCursor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	CONSOLE_CURSOR_INFO cursor_info=&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;	<span class="comment">//第二个值为0隐藏光标</span></span><br><span class="line">	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE),&amp;cursor_info); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	hight=<span class="number">20</span>;</span><br><span class="line">	<span class="built_in">width</span>=<span class="number">30</span>; </span><br><span class="line">	position_x=hight/<span class="number">2</span>;</span><br><span class="line">	position_y=<span class="built_in">width</span>/<span class="number">2</span>;</span><br><span class="line">	bullet_x=<span class="number">-1</span>;</span><br><span class="line">	bullet_y=position_y;</span><br><span class="line">	enemy_x=<span class="number">0</span>;</span><br><span class="line">	enemy_y=position_y;</span><br><span class="line">	score=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	gotoxy(<span class="number">0</span>,<span class="number">0</span>);	<span class="comment">//清屏，可解决画面闪烁 </span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;hight;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="built_in">width</span>;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>((i==position_x)&amp;&amp;(j==position_y))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>((i==enemy_x)&amp;&amp;(j==enemy_y))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"@"</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>((i==bullet_x)&amp;&amp;(j==bullet_y))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"|"</span>);		<span class="comment">//输出子弹 </span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"得分：%d\n"</span>,score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateWithoutInput</span><span class="params">()</span>		<span class="comment">//与用户输入无关的 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(bullet_x&gt;<span class="number">-1</span>)		<span class="comment">//子弹飞行轨迹 </span></span><br><span class="line">	&#123;</span><br><span class="line">		bullet_x--;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>((bullet_x==enemy_x)&amp;&amp;(bullet_y==enemy_y))		<span class="comment">//打中飞机 </span></span><br><span class="line">	&#123;</span><br><span class="line">		score++;</span><br><span class="line">		enemy_x=<span class="number">0</span>;		<span class="comment">//产生新飞机 </span></span><br><span class="line">		enemy_y=rand()%<span class="built_in">width</span>;		<span class="comment">//随机生成 </span></span><br><span class="line">		bullet_x=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(enemy_x&gt;hight)		<span class="comment">//敌机跑出边界 </span></span><br><span class="line">	&#123;</span><br><span class="line">		enemy_x=<span class="number">0</span>;</span><br><span class="line">		enemy_y=rand()%<span class="built_in">width</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> speed=<span class="number">0</span>;		<span class="comment">//控制敌机向下的移动速度，隔几次循环才移动一次 </span></span><br><span class="line">	<span class="keyword">if</span>(speed&lt;<span class="number">10</span>)</span><br><span class="line">		speed++;</span><br><span class="line">	<span class="keyword">if</span>(speed==<span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		enemy_x++;</span><br><span class="line">		speed=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateWithInput</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> input;</span><br><span class="line">	<span class="keyword">if</span>(kbhit())			<span class="comment">//有输入返回1，无输入返回0 </span></span><br><span class="line">		&#123;</span><br><span class="line">		</span><br><span class="line">			input=getch();		<span class="comment">//判断对飞机进行的操作，不用输入回车 </span></span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'a'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_y--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'d'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_y++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'w'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_x--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'s'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_x++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">' '</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				bullet_x=position_x<span class="number">-1</span>;</span><br><span class="line">				bullet_y=position_y;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HideCursor();</span><br><span class="line">	startup();		<span class="comment">//初始化 </span></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		show();		<span class="comment">//显示画面 </span></span><br><span class="line">		updateWithoutInput();		<span class="comment">//与用户输入无关的更新 </span></span><br><span class="line">		updateWithInput();		<span class="comment">//与用户输入有关的更新 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构学习（持续更新）</title>
    <url>/2020/03/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>由于以前学习的基础不扎实还是有部分代码理解不清<br>已理解的地方会注释</p>
<a id="more"></a>
<p>**</p>
<h2 id="先序构建二叉树，按先序、中序、后序输出"><a href="#先序构建二叉树，按先序、中序、后序输出" class="headerlink" title="先序构建二叉树，按先序、中序、后序输出"></a>先序构建二叉树，按先序、中序、后序输出</h2><p>**<br>&amp;表示引用，更改引用值会更改被引用的值；*表示指针，和原来的值独立。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TREE_SIZE 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span></span><br><span class="line">&#125;BiTNode,*BiTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateBiTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//按先序输入二叉树结点，#表示空树 </span></span><br><span class="line">	<span class="keyword">char</span> ch;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;ch);</span><br><span class="line">	<span class="keyword">if</span>(ch==<span class="string">'#'</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		T=<span class="literal">NULL</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	T = (BiTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiTNode));</span><br><span class="line">	T-&gt;data=ch;</span><br><span class="line">	CreateBiTree(T-&gt;lchild);</span><br><span class="line">	CreateBiTree(T-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrderTravel</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//先序遍历  根左右</span></span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span>;			<span class="comment">//结束本次循环 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c "</span>,T-&gt;data);		<span class="comment">//正在遍历的结点 </span></span><br><span class="line">    PreOrderTravel(T-&gt;lchild);	<span class="comment">//进入左结点 </span></span><br><span class="line">    PreOrderTravel(T-&gt;rchild);	<span class="comment">//左结点为空进入右结点 </span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTravel</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//中序遍历 左根右</span></span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">    InOrderTravel(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c "</span>,T-&gt;data);</span><br><span class="line">    InOrderTravel(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TailOrderTravel</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//后序遍历 左右根</span></span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span>; </span><br><span class="line">    TailOrderTravel(T-&gt;lchild);</span><br><span class="line">    TailOrderTravel(T-&gt;rchild);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c "</span>,T-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入二叉树先序遍历构建二叉树（#代表空）："</span>);</span><br><span class="line">	BiTree T;</span><br><span class="line">	T=(BiTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiTNode));</span><br><span class="line">	</span><br><span class="line">	CreateBiTree(T);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"先序遍历结果："</span>);</span><br><span class="line">	PreOrderTravel(T);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"中序遍历结果："</span>);</span><br><span class="line">	InOrderTravel(T);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"后序遍历结果："</span>);</span><br><span class="line">	TailOrderTravel(T); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>**</p>
<h2 id="两个顺序表差集"><a href="#两个顺序表差集" class="headerlink" title="两个顺序表差集"></a>两个顺序表差集</h2><p>**</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#define LIST_INIT_SIZE 100</span><br><span class="line">#define LISTINCREMENT 10</span><br><span class="line">#define OVERFLOW 3</span><br><span class="line"></span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">	int *elem;</span><br><span class="line">	int length;</span><br><span class="line">	int listsize;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line">int InitList(SqList &amp;L)</span><br><span class="line">&#123;&#x2F;&#x2F;初始化顺序表 </span><br><span class="line">	L.elem&#x3D;(int*)malloc(LIST_INIT_SIZE*sizeof(int));</span><br><span class="line">	if(!L.elem) exit(OVERFLOW);</span><br><span class="line">	L.length&#x3D;0;</span><br><span class="line">	L.listsize&#x3D;LIST_INIT_SIZE;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void defference(SqList *A,SqList *B,SqList *C)</span><br><span class="line">&#123;&#x2F;&#x2F;删除相同的元素 </span><br><span class="line">	int i &#x3D; 0,j &#x3D; 0,k &#x3D; 0;</span><br><span class="line">	</span><br><span class="line">	for(i &#x3D; 0; i &lt; A-&gt;length ; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		j &#x3D; 0;</span><br><span class="line">		</span><br><span class="line">		while(j &lt; B-&gt;length &amp;&amp; B-&gt;elem [j] !&#x3D; A-&gt;elem [i]) &#x2F;&#x2F;找不同的元素 </span><br><span class="line">		&#123;</span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		if(j &#x3D;&#x3D; B-&gt;length )&#x2F;&#x2F;说明找到不同元素 </span><br><span class="line">		&#123;</span><br><span class="line">			C-&gt;elem [k] &#x3D; A-&gt;elem [i];</span><br><span class="line">			</span><br><span class="line">			k++;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	C-&gt;length &#x3D; k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void OuputList(SqList L)</span><br><span class="line">&#123;&#x2F;&#x2F;输出元素 </span><br><span class="line">	int i;</span><br><span class="line">	for(i&#x3D;0;i&lt;L.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;%2d&quot;,L.elem[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int n,m;</span><br><span class="line">	int i,j;</span><br><span class="line">	SqList La,Lb,Lc;</span><br><span class="line">	InitList(La);</span><br><span class="line">	InitList(Lb);</span><br><span class="line">	InitList(Lc);</span><br><span class="line">	</span><br><span class="line">	printf(&quot;请输入La长度:&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">	La.length&#x3D;0;</span><br><span class="line">	printf(&quot;请输入La的元素：\n&quot;);</span><br><span class="line">	for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">	&#123;&#x2F;&#x2F;输入La </span><br><span class="line">		scanf(&quot;%d&quot;,&amp;La.elem[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	La.length&#x3D;n;</span><br><span class="line">	</span><br><span class="line">	printf(&quot;请输入Lb长度:&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;m);</span><br><span class="line">	Lb.length&#x3D;0;</span><br><span class="line">	printf(&quot;请输入Lb的元素：\n&quot;);</span><br><span class="line">	for(j&#x3D;0;j&lt;m;j++)</span><br><span class="line">	&#123;&#x2F;&#x2F;输入Lb </span><br><span class="line">		scanf(&quot;%d&quot;,&amp;Lb.elem[j]);</span><br><span class="line">	&#125;</span><br><span class="line">	Lb.length&#x3D;m;</span><br><span class="line">	</span><br><span class="line">	Lc.length&#x3D;0;</span><br><span class="line">	</span><br><span class="line">	printf(&quot;La:&quot;);</span><br><span class="line">	OuputList(La);</span><br><span class="line">	</span><br><span class="line">	printf(&quot;Lb:&quot;);</span><br><span class="line">	OuputList(Lb);</span><br><span class="line">	</span><br><span class="line">	defference(&amp;La,&amp;Lb,&amp;Lc);</span><br><span class="line">	printf(&quot;Lc:&quot;);</span><br><span class="line">	OuputList(Lc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200215173436545.png" alt="在这里插入图片描述"></p>
]]></content>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
</search>
