<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+Next博客搭建</title>
    <url>/2020/03/02/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>Hexo是一个快速，简单且功能强大的博客框架。您使用Markdown（或其他标记语言）编写帖子，然后Hexo会在几秒钟内生成带有精美主题的静态文件。</p>
<a id="more"></a>
<p>要求：</p>
<ul>
<li>node.js</li>
<li>git</li>
</ul>
<p>1.登录github创建一个仓库，仓库名为：用户名.github.io<br><img src="https://img-blog.csdnimg.cn/20200302101003818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNTkwNzc4,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.下载并安装Node.js。        网址: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a><br>3.打开git bash    ，输入命令：<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br>安装后输入cnpm -v可查看版本。<br>之后npm需改成cnpm。<br>4.输入命令安装hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>5.创建一个文件夹blog：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir blog</span><br></pre></td></tr></table></figure>

<p>6.进入文件夹，初始化：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>7.打开根目录下的_config.yml文件，更改主题theme: landscape 改为 theme: next  ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>同时修改文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/sfershmiss11/sfershmiss11.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>repository为仓库地址。<br>8.    安装工具后才可hexo d 到仓库 ，安装命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>9.下载next主题在themes文件夹下的next里，命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>10.创建新文章：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n 名字</span><br></pre></td></tr></table></figure>

<p>11.然后打开hexo\source_posts下的.md文件加入文章内容。<br>文章内容要用Markdown编写。</p>
<p>12.配置网站信息，打开根目录下_config.yml文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title:          <span class="comment"># 网站标题</span></span><br><span class="line">subtitle:       <span class="comment"># 网站副标题</span></span><br><span class="line">description:    <span class="comment"># 描述，介绍网站的</span></span><br><span class="line">keywords:       <span class="comment"># 网站的关键字</span></span><br><span class="line">author:         <span class="comment"># 博主姓名</span></span><br><span class="line">language: zh-CN <span class="comment"># 语言：zh-CN 是简体中文</span></span><br><span class="line">timezone: UTC   <span class="comment"># 时区</span></span><br></pre></td></tr></table></figure>
<p>13.配置blog主页菜单，打开主题_config.yml文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 菜单设置为 菜单名: /菜单目录 || 菜单图标名字</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  sitemap: /sitemap.xml || sitemap</span><br><span class="line">  commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line">menu_settings:</span><br><span class="line">  icons: <span class="literal">true</span>   <span class="comment"># 显示图标</span></span><br><span class="line">  badges: <span class="literal">true</span>  <span class="comment"># 显示统计信息</span></span><br></pre></td></tr></table></figure>
<p>14.手动生成对应页面:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n page Name</span><br></pre></td></tr></table></figure>

<p>创建新页面名：about    ，tags    ，categories<br>15.<strong>next.yml</strong><br>我们可以将所有主题配置放在一个位置（hexo/source/_data/next.yml）。这样就无需编辑主题配置文件（next/_config.yml）。<br>具体步骤：<br>在 hexo/source/_data 目录中创建 next.yml（如果_data 不存在，则创建目录）。<br>在 next.yml 设置 override 选项为 true。<br>将所有 NexT 主题选项从主题配置文件复制到 hexo/source/_data/next.yml 中。</p>
<p>16.NexT 一共提供了 4 种首页样式，按照自己喜好选择一个，选择一个其他主题样式后其他的主题前一定要加上注释#：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>
<p>17.输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200302111946294.png" alt="在这里插入图片描述"><br>然后在浏览器输入网址：localhost:4000 预览博客页面，git bash中输入ctrl+c退出预览.</p>
<p>18.设置完毕后输入命令上传到github仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习-小游戏制作</title>
    <url>/2020/03/01/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0-%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<p>前几天在知乎上看到一篇文章，了解到了一个通过制作小游戏来学习C语言的书《c语言课程设计与游戏开发实践教程》，很感兴趣就买来学习一下。本帖为学习记录过程。</p>
<a id="more"></a>
<h2 id="自动弹跳的小球"><a href="#自动弹跳的小球" class="headerlink" title="自动弹跳的小球"></a>自动弹跳的小球</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;		//system </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;	//Sleep </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">5</span>;</span><br><span class="line">	<span class="keyword">int</span> y=<span class="number">10</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> left=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> right=<span class="number">20</span>;</span><br><span class="line">	<span class="keyword">int</span> velocity_x=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> velocity_y=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> bottom=<span class="number">10</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		x=x+velocity_x;</span><br><span class="line">		y=y+velocity_y;</span><br><span class="line">		</span><br><span class="line">		system(<span class="string">"cls"</span>);	<span class="comment">//清屏 </span></span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;x;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;y;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"o"</span>);	<span class="comment">//小球 </span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">		Sleep(<span class="number">80</span>);		<span class="comment">//执行间隔时间，参数为毫秒 </span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(x==top||x==bottom)	<span class="comment">//撞到上下的边界 </span></span><br><span class="line">			velocity_x=-velocity_x;</span><br><span class="line">		<span class="keyword">if</span>(y==left||y==right)	<span class="comment">//撞到左右的边界 </span></span><br><span class="line">			velocity_y=-velocity_y;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>sleep语句也可以用循环语句来实现同样的效果。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(n=<span class="number">0</span>;n&lt;<span class="number">20000</span>;n++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(m=<span class="number">0</span>;m&lt;<span class="number">2000</span>;m++)</span><br><span class="line">			&#123;</span><br><span class="line">				k++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;		<span class="comment">//增加执行间隔时间</span></span><br></pre></td></tr></table></figure>
<h2 id="飞机游戏"><a href="#飞机游戏" class="headerlink" title="飞机游戏"></a>飞机游戏</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;	//gotoxy </span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> position_x,position_y;		<span class="comment">//飞机位置 </span></span><br><span class="line"><span class="keyword">int</span> hight,<span class="built_in">width</span>;		<span class="comment">//游戏画面大小 </span></span><br><span class="line"><span class="keyword">int</span> bullet_x,bullet_y;		<span class="comment">//子弹位置 </span></span><br><span class="line"><span class="keyword">int</span> enemy_x,enemy_y;		<span class="comment">//敌机的位置 </span></span><br><span class="line"><span class="keyword">int</span> score;		<span class="comment">//得分 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span>		<span class="comment">//清屏函数 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HANDLE handle=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">	COORD pos;</span><br><span class="line">	pos.X=x;</span><br><span class="line">	pos.Y=y;</span><br><span class="line">	SetConsoleCursorPosition(handle,pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HideCursor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	CONSOLE_CURSOR_INFO cursor_info=&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;	<span class="comment">//第二个值为0隐藏光标</span></span><br><span class="line">	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE),&amp;cursor_info); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">startup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	hight=<span class="number">20</span>;</span><br><span class="line">	<span class="built_in">width</span>=<span class="number">30</span>; </span><br><span class="line">	position_x=hight/<span class="number">2</span>;</span><br><span class="line">	position_y=<span class="built_in">width</span>/<span class="number">2</span>;</span><br><span class="line">	bullet_x=<span class="number">-1</span>;</span><br><span class="line">	bullet_y=position_y;</span><br><span class="line">	enemy_x=<span class="number">0</span>;</span><br><span class="line">	enemy_y=position_y;</span><br><span class="line">	score=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	gotoxy(<span class="number">0</span>,<span class="number">0</span>);	<span class="comment">//清屏，可解决画面闪烁 </span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;hight;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="built_in">width</span>;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>((i==position_x)&amp;&amp;(j==position_y))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>((i==enemy_x)&amp;&amp;(j==enemy_y))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"@"</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>((i==bullet_x)&amp;&amp;(j==bullet_y))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"|"</span>);		<span class="comment">//输出子弹 </span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"得分：%d\n"</span>,score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateWithoutInput</span><span class="params">()</span>		<span class="comment">//与用户输入无关的 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(bullet_x&gt;<span class="number">-1</span>)		<span class="comment">//子弹飞行轨迹 </span></span><br><span class="line">	&#123;</span><br><span class="line">		bullet_x--;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>((bullet_x==enemy_x)&amp;&amp;(bullet_y==enemy_y))		<span class="comment">//打中飞机 </span></span><br><span class="line">	&#123;</span><br><span class="line">		score++;</span><br><span class="line">		enemy_x=<span class="number">0</span>;		<span class="comment">//产生新飞机 </span></span><br><span class="line">		enemy_y=rand()%<span class="built_in">width</span>;		<span class="comment">//随机生成 </span></span><br><span class="line">		bullet_x=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(enemy_x&gt;hight)		<span class="comment">//敌机跑出边界 </span></span><br><span class="line">	&#123;</span><br><span class="line">		enemy_x=<span class="number">0</span>;</span><br><span class="line">		enemy_y=rand()%<span class="built_in">width</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> speed=<span class="number">0</span>;		<span class="comment">//控制敌机向下的移动速度，隔几次循环才移动一次 </span></span><br><span class="line">	<span class="keyword">if</span>(speed&lt;<span class="number">10</span>)</span><br><span class="line">		speed++;</span><br><span class="line">	<span class="keyword">if</span>(speed==<span class="number">10</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		enemy_x++;</span><br><span class="line">		speed=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateWithInput</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> input;</span><br><span class="line">	<span class="keyword">if</span>(kbhit())			<span class="comment">//有输入返回1，无输入返回0 </span></span><br><span class="line">		&#123;</span><br><span class="line">		</span><br><span class="line">			input=getch();		<span class="comment">//判断对飞机进行的操作，不用输入回车 </span></span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'a'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_y--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'d'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_y++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'w'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_x--;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">'s'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				position_x++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(input==<span class="string">' '</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				bullet_x=position_x<span class="number">-1</span>;</span><br><span class="line">				bullet_y=position_y;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HideCursor();</span><br><span class="line">	startup();		<span class="comment">//初始化 </span></span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		show();		<span class="comment">//显示画面 </span></span><br><span class="line">		updateWithoutInput();		<span class="comment">//与用户输入无关的更新 </span></span><br><span class="line">		updateWithInput();		<span class="comment">//与用户输入有关的更新 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构学习（持续更新）</title>
    <url>/2020/03/01/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>由于以前学习的基础不扎实还是有部分代码理解不清<br>已理解的地方会注释</p>
<a id="more"></a>
<p>**</p>
<h2 id="先序构建二叉树，按先序、中序、后序输出"><a href="#先序构建二叉树，按先序、中序、后序输出" class="headerlink" title="先序构建二叉树，按先序、中序、后序输出"></a>先序构建二叉树，按先序、中序、后序输出</h2><p>**<br>&amp;表示引用，更改引用值会更改被引用的值；*表示指针，和原来的值独立。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TREE_SIZE 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> data;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">BiTNode</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span></span><br><span class="line">&#125;BiTNode,*BiTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateBiTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//按先序输入二叉树结点，#表示空树 </span></span><br><span class="line">	<span class="keyword">char</span> ch;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;ch);</span><br><span class="line">	<span class="keyword">if</span>(ch==<span class="string">'#'</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		T=<span class="literal">NULL</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	T = (BiTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiTNode));</span><br><span class="line">	T-&gt;data=ch;</span><br><span class="line">	CreateBiTree(T-&gt;lchild);</span><br><span class="line">	CreateBiTree(T-&gt;rchild);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrderTravel</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//先序遍历  根左右</span></span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span>;			<span class="comment">//结束本次循环 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c "</span>,T-&gt;data);		<span class="comment">//正在遍历的结点 </span></span><br><span class="line">    PreOrderTravel(T-&gt;lchild);	<span class="comment">//进入左结点 </span></span><br><span class="line">    PreOrderTravel(T-&gt;rchild);	<span class="comment">//左结点为空进入右结点 </span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTravel</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//中序遍历 左根右</span></span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">    InOrderTravel(T-&gt;lchild);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c "</span>,T-&gt;data);</span><br><span class="line">    InOrderTravel(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TailOrderTravel</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//后序遍历 左右根</span></span><br><span class="line">    <span class="keyword">if</span>(T==<span class="literal">NULL</span>) <span class="keyword">return</span>; </span><br><span class="line">    TailOrderTravel(T-&gt;lchild);</span><br><span class="line">    TailOrderTravel(T-&gt;rchild);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c "</span>,T-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入二叉树先序遍历构建二叉树（#代表空）："</span>);</span><br><span class="line">	BiTree T;</span><br><span class="line">	T=(BiTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiTNode));</span><br><span class="line">	</span><br><span class="line">	CreateBiTree(T);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"先序遍历结果："</span>);</span><br><span class="line">	PreOrderTravel(T);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"中序遍历结果："</span>);</span><br><span class="line">	InOrderTravel(T);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"后序遍历结果："</span>);</span><br><span class="line">	TailOrderTravel(T); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>**</p>
<h2 id="两个顺序表差集"><a href="#两个顺序表差集" class="headerlink" title="两个顺序表差集"></a>两个顺序表差集</h2><p>**</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#define LIST_INIT_SIZE 100</span><br><span class="line">#define LISTINCREMENT 10</span><br><span class="line">#define OVERFLOW 3</span><br><span class="line"></span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">	int *elem;</span><br><span class="line">	int length;</span><br><span class="line">	int listsize;</span><br><span class="line">&#125;SqList;</span><br><span class="line"></span><br><span class="line">int InitList(SqList &amp;L)</span><br><span class="line">&#123;&#x2F;&#x2F;初始化顺序表 </span><br><span class="line">	L.elem&#x3D;(int*)malloc(LIST_INIT_SIZE*sizeof(int));</span><br><span class="line">	if(!L.elem) exit(OVERFLOW);</span><br><span class="line">	L.length&#x3D;0;</span><br><span class="line">	L.listsize&#x3D;LIST_INIT_SIZE;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void defference(SqList *A,SqList *B,SqList *C)</span><br><span class="line">&#123;&#x2F;&#x2F;删除相同的元素 </span><br><span class="line">	int i &#x3D; 0,j &#x3D; 0,k &#x3D; 0;</span><br><span class="line">	</span><br><span class="line">	for(i &#x3D; 0; i &lt; A-&gt;length ; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		j &#x3D; 0;</span><br><span class="line">		</span><br><span class="line">		while(j &lt; B-&gt;length &amp;&amp; B-&gt;elem [j] !&#x3D; A-&gt;elem [i]) &#x2F;&#x2F;找不同的元素 </span><br><span class="line">		&#123;</span><br><span class="line">			j++;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		if(j &#x3D;&#x3D; B-&gt;length )&#x2F;&#x2F;说明找到不同元素 </span><br><span class="line">		&#123;</span><br><span class="line">			C-&gt;elem [k] &#x3D; A-&gt;elem [i];</span><br><span class="line">			</span><br><span class="line">			k++;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	C-&gt;length &#x3D; k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void OuputList(SqList L)</span><br><span class="line">&#123;&#x2F;&#x2F;输出元素 </span><br><span class="line">	int i;</span><br><span class="line">	for(i&#x3D;0;i&lt;L.length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		printf(&quot;%2d&quot;,L.elem[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	int n,m;</span><br><span class="line">	int i,j;</span><br><span class="line">	SqList La,Lb,Lc;</span><br><span class="line">	InitList(La);</span><br><span class="line">	InitList(Lb);</span><br><span class="line">	InitList(Lc);</span><br><span class="line">	</span><br><span class="line">	printf(&quot;请输入La长度:&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">	La.length&#x3D;0;</span><br><span class="line">	printf(&quot;请输入La的元素：\n&quot;);</span><br><span class="line">	for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">	&#123;&#x2F;&#x2F;输入La </span><br><span class="line">		scanf(&quot;%d&quot;,&amp;La.elem[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	La.length&#x3D;n;</span><br><span class="line">	</span><br><span class="line">	printf(&quot;请输入Lb长度:&quot;);</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;m);</span><br><span class="line">	Lb.length&#x3D;0;</span><br><span class="line">	printf(&quot;请输入Lb的元素：\n&quot;);</span><br><span class="line">	for(j&#x3D;0;j&lt;m;j++)</span><br><span class="line">	&#123;&#x2F;&#x2F;输入Lb </span><br><span class="line">		scanf(&quot;%d&quot;,&amp;Lb.elem[j]);</span><br><span class="line">	&#125;</span><br><span class="line">	Lb.length&#x3D;m;</span><br><span class="line">	</span><br><span class="line">	Lc.length&#x3D;0;</span><br><span class="line">	</span><br><span class="line">	printf(&quot;La:&quot;);</span><br><span class="line">	OuputList(La);</span><br><span class="line">	</span><br><span class="line">	printf(&quot;Lb:&quot;);</span><br><span class="line">	OuputList(Lb);</span><br><span class="line">	</span><br><span class="line">	defference(&amp;La,&amp;Lb,&amp;Lc);</span><br><span class="line">	printf(&quot;Lc:&quot;);</span><br><span class="line">	OuputList(Lc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200215173436545.png" alt="在这里插入图片描述"></p>
]]></content>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
</search>
